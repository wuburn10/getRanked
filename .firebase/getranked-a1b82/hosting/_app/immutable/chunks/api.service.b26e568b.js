var T=Object.defineProperty;var f=(r,t,e)=>t in r?T(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var i=(r,t,e)=>(f(r,typeof t!="symbol"?t+"":t,e),e);class h extends Error{constructor(e,s,n){super();i(this,"status");i(this,"statusText");i(this,"body");this.status=e,this.statusText=s,this.body=n}get message(){return`(EXCEPTION) ${this.statusText} - ${this.body}`}}class g{constructor(t,e){i(this,"url");e==null&&(e=""),this.url=new URL(e,t)}get request(){return new m(this.url)}}class m{constructor(t,e){i(this,"base");i(this,"query");i(this,"init");i(this,"headers");this.base=t,this.query=e}withQuery(t,e){const s=[this.base.pathname,t].map(a=>a.replace(/(^\/|\/$)/g,"")).join("/"),n=new URL(s,this.base);for(const a in e)n.searchParams.append(a,e[a]);return n}parseInit(t){if(t==null&&this.headers==null)return;let e=Object.assign({},this.init);return e==null&&(e={}),t!=null&&e!=null&&(e.method=t),this.headers!=null&&e!=null&&(e.headers=Object.assign({},this.headers)),e}withBody(t){return this.init==null&&(this.init={}),this.init.body=t,this}includeCredentials(){return this.init==null&&(this.init={}),this.init.credentials="include",this}includeSameOriginCredentials(){return this.init==null&&(this.init={}),this.init.credentials="same-origin",this}keepAlive(){return this.init==null&&(this.init={}),this.init.keepalive=!0,this}followRedirect(){return this.init==null&&(this.init={}),this.init.redirect="follow",this}errorOnRedirect(){return this.init==null&&(this.init={}),this.init.redirect="error",this}setHeader(t,e){return this.headers==null&&(this.headers={key:e}),this.headers[t]=e,this}setBearerToken(t){return this.setHeader("Authorization",`Bearer ${t}`),this}withAccessToken(){const t=localStorage.getItem("auth-tkn");return this.setHeader("Authorization",`Bearer ${t}`),this}withAuthID(){const t=localStorage.getItem("auth-id");return this.setHeader("Authorization",`${t}`),this}withContentType(t){return this.setHeader("Content-Type",t),this}withJSON(t){const e=JSON.stringify(t);return this.withBody(e).withContentType("application/json")}async get(t,e){const s=await fetch(this.withQuery(t,e),this.parseInit());if(!s.ok)throw new h(s.status,s.statusText,await s.text());return s.json()}async post(t,e){const s=await fetch(this.withQuery(t,e),this.parseInit("POST"));if(!s.ok)throw new h(s.status,s.statusText,await s.text());return s.json()}async put(t,e){const s=await fetch(this.withQuery(t,e),this.parseInit("PUT"));if(!s.ok)throw new h(s.status,s.statusText,await s.text());return s.json()}async delete(t,e){const s=await fetch(this.withQuery(t,e),this.parseInit("DELETE"));if(!s.ok)throw new h(s.status,s.statusText,await s.text());return s.json()}async patch(t,e){const s=await fetch(this.withQuery(t,e),this.parseInit("PATCH"));if(!s.ok)throw new h(s.status,s.statusText,await s.text());return s.json()}}const S="http://localhost:5000";class x{static async createTournament(t,e,s,n,a,u,c,o,w,d,p,y){try{return(await this.httpService.request.withJSON({uid:t,name:e,sport:s,type:n,last_register_dt:a,start_dt:u,end_dt:c,regulations:o,categories:w,location:d,address:p,courts:y}).post("/tournament/create")).id}catch(l){throw l}}static async getTournaments(){try{return(await this.httpService.request.get("/tournaments")).tournaments}catch(t){throw t}}static async getTournament(t){try{return(await this.httpService.request.get("/tournament/"+t)).tournaments}catch(e){throw e}}static async registerUser(t,e,s,n,a,u,c){try{return(await this.httpService.request.withJSON({email:t,password:e,confirmationPassword:s,firstName:n,lastName:a,gender:u,dateOfBirth:c}).post("/user/create")).code}catch(o){throw o}}static async login(t,e){try{return(await this.httpService.request.withJSON({email:t,password:e}).post("/user/login")).code}catch(s){throw s}}}i(x,"httpService",new g(S,"api"));export{x as A};
